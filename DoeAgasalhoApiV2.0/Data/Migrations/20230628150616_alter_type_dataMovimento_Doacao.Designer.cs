// <auto-generated />
using System;
using DoeAgasalhoApiV2._0.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoeAgasalhoApiV2._0.Migrations
{
    [DbContext(typeof(DbDoeagasalhov2Context))]
    [Migration("20230628150616_alter_type_dataMovimento_Doacao")]
    partial class alter_type_dataMovimento_Doacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb3_general_ci")
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb3");

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.DoacaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("produto_id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.Property<DateTime>("DataMovimento")
                        .HasColumnType("datetime")
                        .HasColumnName("data_movimento");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<string>("TipoMovimento")
                        .IsRequired()
                        .HasColumnType("enum('entrada','saida', 'cadastro')")
                        .HasColumnName("tipo_movimento");

                    b.HasKey("Id", "ProdutoId", "UsuarioId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex(new[] { "ProdutoId" }, "fk_doacao_produto1_idx");

                    b.HasIndex(new[] { "UsuarioId" }, "fk_doacao_usuario1_idx");

                    b.ToTable("doacao", (string)null);
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.EnderecoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("complemento");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("estado");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("logradouro");

                    b.Property<int>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("numero");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("endereco", (string)null);
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.PontoColetaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int")
                        .HasColumnName("endereco_id");

                    b.Property<string>("Ativo")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ativo");

                    b.Property<string>("NomePonto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome_ponto");

                    b.HasKey("Id", "EnderecoId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "EnderecoId" }, "fk_ponto_coleta_endereco1_idx");

                    b.HasIndex(new[] { "NomePonto" }, "nome_ponto_UNIQUE")
                        .IsUnique();

                    b.ToTable("ponto_coleta", (string)null);
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.PontoProdutoModel", b =>
                {
                    b.Property<int>("PontoColetaId")
                        .HasColumnType("int")
                        .HasColumnName("ponto_coleta_id");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("produto_id");

                    b.HasKey("PontoColetaId", "ProdutoId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "PontoColetaId" }, "fk_ponto_coleta_has_produtos_ponto_coleta1_idx");

                    b.HasIndex(new[] { "ProdutoId" }, "fk_ponto_coleta_has_produtos_produtos1_idx");

                    b.ToTable("ponto_produto", (string)null);
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.ProdutoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ativo");

                    b.Property<string>("Caracteristica")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("caracteristica");

                    b.Property<int>("Estoque")
                        .HasColumnType("int")
                        .HasColumnName("estoque");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("enum('M','F','U')")
                        .HasColumnName("genero");

                    b.Property<int>("TamanhoId")
                        .HasColumnType("int")
                        .HasColumnName("tamanho_id");

                    b.Property<int>("TipoId")
                        .HasColumnType("int")
                        .HasColumnName("tipo_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TamanhoId" }, "fk_produtos_tamanhos1_idx");

                    b.HasIndex(new[] { "TipoId" }, "fk_produtos_tipos1_idx");

                    b.ToTable("produto", (string)null);
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.TamanhoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Nome" }, "descricao_UNIQUE")
                        .IsUnique();

                    b.ToTable("tamanho", (string)null);
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.TipoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ativo");

                    b.Property<string>("Nome")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Nome" }, "descricao_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("descricao_UNIQUE1");

                    b.ToTable("tipo", (string)null);
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ativo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<int?>("PontoColetaId")
                        .HasColumnType("int")
                        .HasColumnName("ponto_coleta_id");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("senha");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("enum('admin','normal')")
                        .HasColumnName("tipo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "PontoColetaId" }, "fk_usuario_ponto_coleta1_idx");

                    b.HasIndex(new[] { "Nome" }, "username_UNIQUE")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.DoacaoModel", b =>
                {
                    b.HasOne("DoeAgasalhoApiV2._0.Models.Entities.ProdutoModel", "Produto")
                        .WithMany("Doacoes")
                        .HasForeignKey("ProdutoId")
                        .IsRequired()
                        .HasConstraintName("fk_doacao_produto1");

                    b.HasOne("DoeAgasalhoApiV2._0.Models.Entities.UsuarioModel", "Usuario")
                        .WithMany("Doacoes")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("fk_doacao_usuario1");

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.PontoColetaModel", b =>
                {
                    b.HasOne("DoeAgasalhoApiV2._0.Models.Entities.EnderecoModel", "Endereco")
                        .WithMany("PontoColeta")
                        .HasForeignKey("EnderecoId")
                        .IsRequired()
                        .HasConstraintName("fk_ponto_coleta_endereco1");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.PontoProdutoModel", b =>
                {
                    b.HasOne("DoeAgasalhoApiV2._0.Models.Entities.ProdutoModel", "Produto")
                        .WithMany("PontoProdutos")
                        .HasForeignKey("ProdutoId")
                        .IsRequired()
                        .HasConstraintName("fk_ponto_coleta_has_produtos_produtos1");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.ProdutoModel", b =>
                {
                    b.HasOne("DoeAgasalhoApiV2._0.Models.Entities.TamanhoModel", "Tamanho")
                        .WithMany("Produtos")
                        .HasForeignKey("TamanhoId")
                        .IsRequired()
                        .HasConstraintName("fk_produtos_tamanhos1");

                    b.HasOne("DoeAgasalhoApiV2._0.Models.Entities.TipoModel", "Tipo")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoId")
                        .IsRequired()
                        .HasConstraintName("fk_produtos_tipos1");

                    b.Navigation("Tamanho");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.EnderecoModel", b =>
                {
                    b.Navigation("PontoColeta");
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.ProdutoModel", b =>
                {
                    b.Navigation("Doacoes");

                    b.Navigation("PontoProdutos");
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.TamanhoModel", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.TipoModel", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("DoeAgasalhoApiV2._0.Models.Entities.UsuarioModel", b =>
                {
                    b.Navigation("Doacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
